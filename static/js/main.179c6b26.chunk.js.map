{"version":3,"sources":["reducers/common.js","reducers/modal.js","reducers/wallet.js","reducers/profile.js","reducers/plan.js","reducers/game.js","reducers/category.js","reducers/leaders.js","reducer.js","middlewares/index.js","middlewares/jwt-middleware.js","middlewares/redirect-middleware.js","store.js","actions.js","constants/actionTypes.js","components/UI/Spinner/AppLoading.js","actionCreators.js","components/App.js","serviceWorker.js","index.js","agent.js"],"names":["defaultState","isMenuOpen","useLiteClient","isMobile","window","innerWidth","MOBILE_WIDTH","useGlobalHeader","state","action","type","APP_LOAD","error","REQUEST_FETCHING","fetching","REQUEST_FETCHED","USER_LOADED","USER_REGISTERED","USER_LOGGED_IN","currentUser","user","MODEL_CREATION_FAILED","USER_REGISTERING_FAILED","USER_LOGIN_FAILED","USER_REGISTERING","USER_LOGGING_IN","ERROR_MESSAGE_CLEARED","REDIRECT","SHOW_MODAL","redirectTo","RELOAD_APP","reload","HIDE_MODAL","TOGGLE_MENU","open","SHOW_GLOBAL_HEADER","HIDE_GLOBAL_HEADER","LOGOUT","IS_MOBILE","mobileSize","initialState","modalType","modalProps","show","bonus","cash","balance","transactions","banks","WALLET_LOADED","WALLET_LOAD","WALLET_TRANSACTIONS_LOAD","PAYMENT_MADE","Number","amount","BANKS_LOADED","first_name","last_name","gender","date_of_birth","address","avatar","account_name","bank_name","account_number","currency","LOAD_PROFILE","payload","UPDATING_PROFILE","PROFILE_UPDATED","UPDATING_PROFILE_FAILED","UPLOADING_AVATAR","avatarUploading","AVATAR_UPLAODED","AVATAR_UPLAOD_FAILED","active","PLAN_PURCHASED","PLANS_LOADED","PURCHASING_PLAN_FAILED","PURCHASING_PLAN","plan","category","started","ended","session","useGameSummaryHeader","unloadedState","GAME_PLAN_SELECTED","GAME_CATEGORY_SELECTED","GAME_STARTED","GAME_ENDED","game","GAME_RESTARTED","LEADERS_LOADED","leaders","RANK_LOADED","rank","GAME_UNLOADED","HIDE_GAME_SUMMARY_HEADER","SHOW_GAME_SUMMARY_HEADER","list","CATEGORIES_LOADED","board","first","second","third","LEADERS_LOADING_FAILED","LEADERS_LOADING","appReducer","history","combineReducers","router","connectRouter","common","modal","wallet","profile","categories","store","next","LOGIN","REGISTER","localStorage","removeItem","agent","setToken","setItem","token","access_token","hash","location","endsWith","getItem","createBrowserHistory","configureStore","preloadedState","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","customeMiddlewares","loadApp","dispatch","Auth","loginUser","username","password","userLoggingIn","login","then","data","role","notifyError","logout","requestFetched","onLogin","err","userLoginFailed","response","body","createCustomer","customer","Customer","save","notifySuccess","message","push","onModelCreationFailed","getErrorMessage","updateCustomer","edit","deleteCustomer","id","delete","createCharge","charge","Charge","updateCharge","deleteCharge","createUser","register","createTransaction","transaction","Transaction","updateTransaction","approveTransaction","approve","deleteTransaction","userLogout","showBonusAlert","showSignUpBonusModal","clearErrorMessage","errorMessageCleared","getCurrentUser","current","toast","success","saveAuthData","userLoggedIn","errorMessage","description","AppLoading","className","userRegistering","leadersLoaded","loadingLeaders","loadingLeadersFailed","userRegisterFailed","categoriesLoaded","walletLoaded","uploadingAvatar","avatarUploaded","avatarUploadFailed","profileUpdated","updatingProfile","updatingProfileFailed","rankLoaded","hideModal","banksLoaded","purchasingPlan","planPurchased","planPurchaseFailed","AppRouter","React","lazy","configure","position","autoClose","hideProgressBar","pauseOnHover","draggable","progress","undefined","App","props","showBonus","useSelector","useDispatch","useEffect","console","log","isAuth","Suspense","fallback","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","component","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","superagent","superagentPromise","_superagent","global","Promise","API_ROOT","responseBody","res","tokenPlugin","req","set","on","requests","url","del","use","put","post","logError","auth","JSON","parse","auth_token","_user","stringify","saveFirstTime","loggedInOnce","checkValidEmail","email","forgotPassword","resetPassword","sendResetToken","verifyResetToken","load","loadByCard","card","view","User","Profile","editBank","editPersonal","uploadAvatar","_token"],"mappings":"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","file":"static/js/main.179c6b26.chunk.js","sourcesContent":["import {\r\n  APP_LOAD, REDIRECT, SHOW_MODAL, HIDE_MODAL, LOGOUT, RELOAD_APP, TOGGLE_MENU, IS_MOBILE, MOBILE_WIDTH, USER_LOADED,\r\n  USER_LOGIN_FAILED, USER_LOGGING_IN, USER_LOGGED_IN, USER_REGISTERING_FAILED, USER_REGISTERED, USER_REGISTERING,\r\n  HIDE_GLOBAL_HEADER, SHOW_GLOBAL_HEADER, MODEL_CREATION_FAILED, ERROR_MESSAGE_CLEARED, REQUEST_FETCHING, REQUEST_FETCHED\r\n} from './../constants/actionTypes';\r\n\r\nconst defaultState = {\r\n  isMenuOpen: false,\r\n  useLiteClient: false,\r\n  isMobile: window.innerWidth <= MOBILE_WIDTH,\r\n  useGlobalHeader: true,\r\n  // currentUser: {},\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case APP_LOAD:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case REQUEST_FETCHING:\r\n      return {\r\n        ...state,\r\n        fetching: true\r\n      };\r\n    case REQUEST_FETCHED:\r\n      return {\r\n        ...state,\r\n        fetching: false\r\n      }\r\n    case USER_LOADED:\r\n    case USER_REGISTERED:\r\n    case USER_LOGGED_IN:\r\n      return {\r\n        ...state,\r\n        currentUser: action.user ? action.user : null,\r\n        error: null,\r\n        fetching: false,\r\n      };\r\n    case MODEL_CREATION_FAILED:\r\n    case USER_REGISTERING_FAILED:\r\n    case USER_LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        fetching: false,\r\n      };\r\n    case USER_REGISTERING:\r\n    case USER_LOGGING_IN:\r\n      return {\r\n        ...state,\r\n        fetching: true\r\n      }\r\n    case ERROR_MESSAGE_CLEARED:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case REDIRECT:\r\n      return { ...state, redirectTo: null };\r\n    case SHOW_MODAL:\r\n      return { ...state, redirectTo: null };\r\n    case RELOAD_APP:\r\n      return { ...state, reload: false };\r\n    case HIDE_MODAL:\r\n      return { ...state, redirectTo: null };\r\n    case TOGGLE_MENU:\r\n      return { ...state, isMenuOpen: action.open }\r\n    case SHOW_GLOBAL_HEADER:\r\n      return { ...state, useGlobalHeader: true }\r\n    case HIDE_GLOBAL_HEADER:\r\n      return { ...state, useGlobalHeader: false }\r\n    case LOGOUT:\r\n      return { ...state, currentUser: null, isMenuOpen: false };\r\n    case IS_MOBILE:\r\n      return { ...state, isMobile: action.mobileSize };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SHOW_MODAL, HIDE_MODAL } from \"../constants/actionTypes\"\r\n\r\nconst initialState = {\r\n    modalType: null,\r\n    modalProps: {\r\n      open: false,\r\n      show: false\r\n    }\r\n  }\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case SHOW_MODAL:\r\n        return {\r\n          modalProps: action.modalProps,\r\n          modalType: action.modalType,\r\n        }\r\n      case HIDE_MODAL:\r\n        return initialState\r\n      default:\r\n        return state\r\n    }\r\n  }","import { WALLET_LOAD, WALLET_TRANSACTIONS_LOAD, PAYMENT_MADE, WALLET_LOADED, LOGOUT, BANKS_LOADED } from './../constants/actionTypes';\r\n\r\nconst defaultState = {\r\n  bonus: 0.00,\r\n  cash: 0.00,\r\n  balance: 0.00,\r\n  transactions: [],\r\n  banks: [],\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case WALLET_LOADED:\r\n    case WALLET_LOAD:\r\n      return {\r\n        ...state,\r\n        bonus: action.bonus,\r\n        cash: action.cash,\r\n        balance: action.balance,\r\n      };\r\n    case WALLET_TRANSACTIONS_LOAD:\r\n      return {\r\n        ...state,\r\n        transactions: action.transactions\r\n      };\r\n    case PAYMENT_MADE:\r\n      return {\r\n        ...state,\r\n        cash: Number(state.cash) + Number(action.amount),\r\n        balance: Number(state.balance) + Number(action.amount)\r\n      }\r\n    case BANKS_LOADED:\r\n      return {\r\n        ...state,\r\n        banks: action.banks\r\n      }\r\n    case LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LOAD_PROFILE, UPLOADING_AVATAR, AVATAR_UPLAODED, AVATAR_UPLAOD_FAILED, UPDATING_PROFILE, PROFILE_UPDATED, UPDATING_PROFILE_FAILED } from './../constants/actionTypes';\r\n\r\nconst defaultState = {\r\n  first_name: '',\r\n  last_name: '',\r\n  gender: '',\r\n  date_of_birth: '',\r\n  address: '',\r\n  state: '',\r\n  avatar: '',\r\n  account_name: '',\r\n  bank_name: '',\r\n  account_number: '',\r\n  currency: ''\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_PROFILE:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n    };\r\n    case UPDATING_PROFILE:\r\n      return {\r\n        ...state,\r\n        fetching: true\r\n    };\r\n    case PROFILE_UPDATED:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        fetching: false\r\n    };\r\n    case UPDATING_PROFILE_FAILED:\r\n      return {\r\n        ...state,\r\n        fetching: false\r\n    };\r\n    case UPLOADING_AVATAR:\r\n      return {\r\n        ...state,\r\n        avatarUploading: true\r\n      };\r\n    case AVATAR_UPLAODED:\r\n      return {\r\n        ...state,\r\n        avatarUploading: false,\r\n        avatar: action.payload\r\n      };\r\n    case AVATAR_UPLAOD_FAILED:\r\n      return {\r\n        ...state,\r\n        avatarUploading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { PLANS_LOADED, PLAN_PURCHASED, PURCHASING_PLAN_FAILED, PURCHASING_PLAN  } from './../constants/actionTypes';\r\n\r\nconst defaultState = {\r\n  active: [],\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case PLAN_PURCHASED:\r\n    case PLANS_LOADED:\r\n      return {\r\n        ...state,\r\n        active: action.payload\r\n      };\r\n    case PURCHASING_PLAN_FAILED:\r\n      return {\r\n        ...state,\r\n        fetching: false\r\n      }\r\n    case PURCHASING_PLAN:\r\n      return {\r\n        ...state,\r\n        fetching: true\r\n      }\r\n    // case PLAN_PURCHASED:\r\n    //   return {\r\n    //     ...state,\r\n    //     active: state.active.concat(action.payload)\r\n    //   }\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  GAME_PLAN_SELECTED,\r\n  GAME_CATEGORY_SELECTED,\r\n  GAME_STARTED,\r\n  GAME_UNLOADED,\r\n  GAME_ENDED,\r\n  GAME_RESTARTED,\r\n  LEADERS_LOADED,\r\n  HIDE_GAME_SUMMARY_HEADER,\r\n  SHOW_GAME_SUMMARY_HEADER,\r\n  RANK_LOADED,\r\n  LOGOUT\r\n} from \"../constants/actionTypes\";\r\n\r\nconst defaultState = {\r\n  plan: null,\r\n  category: null,\r\n  started: false,\r\n  ended: false,\r\n  session: {},\r\n  useGameSummaryHeader: false,\r\n};\r\n\r\nconst unloadedState = {\r\n  plan: null,\r\n  category: null,\r\n  started: false,\r\n  ended: false,\r\n  session: {},\r\n  useGameSummaryHeader: false,\r\n}\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GAME_PLAN_SELECTED:\r\n      return {\r\n        ...state,\r\n        plan: action.payload\r\n      };\r\n    case GAME_CATEGORY_SELECTED:\r\n      return {\r\n        ...state,\r\n        category: action.payload\r\n      };\r\n    case GAME_STARTED:\r\n      return {\r\n        ...state,\r\n        started: true,\r\n        session: action.payload\r\n      };\r\n    case GAME_ENDED:\r\n      return {\r\n        ...state,\r\n        started: false,\r\n        ended: true,\r\n        session: action.game,\r\n      };\r\n    case GAME_RESTARTED:\r\n      return {\r\n        ...state,\r\n        started: false,\r\n        ended: false,\r\n        session: {},\r\n        plan: null,\r\n        category: null,\r\n      };\r\n    case LEADERS_LOADED:\r\n      return {\r\n        ...state,\r\n        leaders: action.leaders,\r\n      };\r\n    case RANK_LOADED:\r\n      return {\r\n        ...state,\r\n        rank: action.rank,\r\n      };\r\n    case LOGOUT:\r\n      return defaultState\r\n    case GAME_UNLOADED:\r\n      return {\r\n        ...state,\r\n        ...unloadedState\r\n      };\r\n    case HIDE_GAME_SUMMARY_HEADER:\r\n      return {\r\n        ...state,\r\n        useGameSummaryHeader: false,\r\n      };\r\n    case SHOW_GAME_SUMMARY_HEADER:\r\n      return {\r\n        ...state,\r\n        useGameSummaryHeader: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { CATEGORIES_LOADED  } from './../constants/actionTypes';\r\n\r\nconst defaultState = {\r\n  list: []\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case CATEGORIES_LOADED:\r\n      return {\r\n        ...state,\r\n        list : action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LEADERS_LOADED, LEADERS_LOADING_FAILED, LEADERS_LOADING } from './../constants/actionTypes';\r\n\r\nconst defaultState = {\r\n  // board: [],\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case LEADERS_LOADED:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        board: action.board,\r\n        first: action.board ? action.board[0]:null,\r\n        second: action.board ? action.board[1]:null,\r\n        third: action.board ? action.board[2]:null,\r\n      }\r\n    case LEADERS_LOADING_FAILED:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n      };\r\n    case LEADERS_LOADING:\r\n      return {\r\n        ...state,\r\n        fetching: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport common from './reducers/common';\r\nimport modal from './reducers/modal';\r\n// import auth from './reducers/auth';\r\nimport wallet from './reducers/wallet';\r\nimport profile from './reducers/profile';\r\nimport plan from './reducers/plan';\r\nimport game from './reducers/game';\r\nimport categories from './reducers/category';\r\nimport leaders from './reducers/leaders'\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nconst appReducer =  (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  common,\r\n  modal,\r\n  wallet,\r\n  profile,\r\n  plan,\r\n  game,\r\n  categories,\r\n  leaders,\r\n});\r\n\r\nexport default appReducer;","import jwtMiddlewares from './jwt-middleware';\r\nimport redirectMiddlewares from './redirect-middleware';\r\n\r\nexport default [\r\n    jwtMiddlewares,\r\n    redirectMiddlewares\r\n]","import agent from \"../agent\";\r\nimport { LOGIN, LOGOUT, REGISTER } from \"../constants/actionTypes\";\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if ( (action.type === LOGIN || action.type === REGISTER ) && !action.error) {\r\n      window.localStorage.setItem('jwt', action.token.access_token);\r\n      agent.setToken(action.token.access_token);\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.removeItem('jwt');\r\n    agent.setToken(null);\r\n    // window.location.pathname = \"/login\";\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nexport default localStorageMiddleware;","const redirectMiddleware = store => next => action => {\r\n\r\n    const { hash } = window.location;\r\n    if (hash.endsWith(\"login\") || hash.endsWith(\"register\")) {\r\n        const auth = window.localStorage.getItem('jwt');\r\n\r\n        if (auth) {\r\n            window.location.hash = \"#/games\";\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default redirectMiddleware;","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createBrowserHistory } from 'history'\r\nimport thunk from 'redux-thunk';\r\nimport appReducer from \"./reducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport customeMiddlewares from './middlewares';\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst getMiddlewares = () => applyMiddleware(thunk, routerMiddleware(history, ...customeMiddlewares));\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const store = createStore(\r\n    appReducer(history),\r\n    preloadedState,\r\n    composeWithDevTools(getMiddlewares()),\r\n  )\r\n\r\n  return store\r\n};","// import React from 'react'\r\nimport agent from \"./agent\"\r\nimport { push } from 'connected-react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\n// import '@pwabuilder/pwainstall'\r\nimport {\r\n  onModelCreationFailed, userLoaded, userLoggedIn, userLoginFailed, userLoggingIn,\r\n  hideModal, appLoaded, userLogout, showSignUpBonusModal, userRegistering,\r\n  userRegisterFailed,\r\n  loadingLeaders,\r\n  leadersLoaded,\r\n  loadingLeadersFailed,\r\n  categoriesLoaded,\r\n  walletLoaded,\r\n  profileLoaded,\r\n  rankLoaded,\r\n  plansLoaded,\r\n  avatarUploaded,\r\n  uploadingAvatar,\r\n  avatarUploadFailed,\r\n  banksLoaded,\r\n  updatingProfile,\r\n  profileUpdated,\r\n  updatingProfileFailed,\r\n  purchasingPlan,\r\n  planPurchased,\r\n  planPurchaseFailed,\r\n  errorMessageCleared,\r\n  requestFetched\r\n} from './actionCreators'\r\n\r\nexport function loadApp() {\r\n  return dispatch => {\r\n    agent.Auth.setToken()\r\n    // return agent.Auth.current().then(\r\n    //   x => {\r\n    //     dispatch(userLoaded(x.data.user))\r\n    //     dispatch(appLoaded())\r\n    //     dispatch(rankLoaded(x.data.user.rank))\r\n    //     dispatch(walletLoaded(x.data.wallet))\r\n    //     dispatch(plansLoaded(x.data.plans))\r\n    //     dispatch(profileLoaded(x.data.user.profile))\r\n    //     dispatch(loadCategories())\r\n\r\n    //   }\r\n    // );\r\n  }\r\n}\r\n\r\nexport function loginUser(username, password) {\r\n  return dispatch => {\r\n    dispatch(userLoggingIn())\r\n    return agent.Auth.login(username, password).then(\r\n      data => {\r\n        if (data.role === 'IsCashier') {\r\n          notifyError(\"A Cashier is not allowed to login here. Use the mobile app\");\r\n          dispatch(logout());\r\n          dispatch(requestFetched());\r\n        }\r\n        else {\r\n          onLogin(dispatch, data)\r\n        }\r\n      },\r\n      err => {\r\n        dispatch(userLoginFailed(err.response && err.response.body))\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function registerUser(data) {\r\n  return dispatch => {\r\n    dispatch(userRegistering())\r\n    return agent.Auth.register(data).then(\r\n      x => {\r\n        onLogin(dispatch, x)\r\n      },\r\n      err => {\r\n        const errors = err.response && err.response.body && err.response.body.errors\r\n        const errorMesages = Object.values(errors, {})\r\n        dispatch(userRegisterFailed(errorMesages[0]))\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function createCustomer(customer) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.Customer.save(customer).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/customers'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)))\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function updateCustomer(customer) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.Customer.edit(customer).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        // dispatch(push('/customers'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)))\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function deleteCustomer(id) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.Customer.delete(id).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/customers'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function createCharge(charge) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.Charge.save(charge).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/charges'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function updateCharge(charge) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.Charge.edit(charge).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        // dispatch(push('/charges'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function deleteCharge(id) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.Charge.delete(id).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/charges'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function createUser(user) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.Auth.register(user).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/users'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)))\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function updateUser(user) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.User.edit(user).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        // dispatch(push('/users'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(err.response && err.response.body))\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  return dispatch => {\r\n    // dispatch(userLoggingIn())\r\n    return agent.User.delete(id).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/users'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(err.response && err.response.body))\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function createTransaction(transaction) {\r\n  return dispatch => {\r\n    // dispatch(transactionLoggingIn())\r\n    return agent.Transaction.save(transaction).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/transactions'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function updateTransaction(transaction) {\r\n  return dispatch => {\r\n    // dispatch(transactionLoggingIn())\r\n    return agent.Transaction.edit(transaction).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        // dispatch(push('/transactions'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function approveTransaction(transaction) {\r\n  return dispatch => {\r\n    // dispatch(transactionLoggingIn())\r\n    return agent.Transaction.approve(transaction).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/transactions'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function deleteTransaction(id) {\r\n  return dispatch => {\r\n    // dispatch(transactionLoggingIn())\r\n    return agent.Transaction.delete(id).then(\r\n      response => {\r\n        notifySuccess(response.message);\r\n        dispatch(push('/transactions'));\r\n      },\r\n      err => {\r\n        dispatch(onModelCreationFailed(getErrorMessage(err)));\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function loadLeaders() {\r\n  return dispatch => {\r\n    dispatch(loadingLeaders())\r\n    return agent.Game.leaders().then(\r\n      x => {\r\n        dispatch(leadersLoaded(x.data))\r\n      },\r\n      err => {\r\n        dispatch(loadingLeadersFailed())\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => {\r\n    agent.Auth.logout()\r\n    dispatch(userLogout())\r\n    dispatch(push('/login'))\r\n  }\r\n}\r\n\r\nexport function showBonusAlert() {\r\n  return dispatch => {\r\n    dispatch(showSignUpBonusModal())\r\n  }\r\n}\r\n\r\nexport function clearErrorMessage() {\r\n  return dispatch => {\r\n    dispatch(errorMessageCleared())\r\n  }\r\n}\r\n\r\nexport function loadCategories() {\r\n  return dispatch => {\r\n    // dispatch(loadingLeaders())\r\n    return agent.Category.all().then(\r\n      x => {\r\n        dispatch(categoriesLoaded(x.data))\r\n      },\r\n      err => {\r\n        // dispatch(loadingLeadersFailed())\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function loadRank() {\r\n  return dispatch => {\r\n    // dispatch(loadingLeaders())\r\n    return agent.Game.rank().then(\r\n      x => {\r\n        dispatch(rankLoaded(x.data.rank))\r\n      },\r\n      err => {\r\n        // dispatch(loadingLeadersFailed())\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function uploadAvatar(file) {\r\n\r\n  if (file.size > 2047000) {\r\n    notifyError('Image is too large')\r\n    return;\r\n  }\r\n  const formData = readFormData(file, 'avatar');\r\n  return dispatch => {\r\n    dispatch(uploadingAvatar())\r\n    return agent.Profile.uploadAvatar(formData, { 'Content-Type': 'multipart/form-data;  boundary=c7cbfdd911b4e720f1dd8f479c50bc7f' })\r\n      .then(\r\n        x => {\r\n          notifySuccess(\"Avatar updated\")\r\n          dispatch(avatarUploaded(x.data.avatar))\r\n        },\r\n        err => {\r\n          notifyError(\"Avatar uplaod failed\")\r\n          dispatch(logError(err));\r\n          dispatch(avatarUploadFailed())\r\n        }\r\n      )\r\n  }\r\n}\r\n\r\nexport function logError(data) {\r\n  return dispatch => {\r\n    return agent.Auth.logError(data)\r\n  }\r\n}\r\n\r\nexport function updateProfile(data) {\r\n\r\n  return dispatch => {\r\n    dispatch(updatingProfile())\r\n    return agent.Profile.edit(data).then(\r\n      x => {\r\n        notifySuccess(\"Profile updated\")\r\n        return dispatch(profileUpdated(x.data.profile))\r\n      },\r\n      err => {\r\n        notifyError(\"Cannot update profile\")\r\n        dispatch(updatingProfileFailed())\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport function updatePersonalProfile(data) {\r\n\r\n  return dispatch => {\r\n    dispatch(updatingProfile())\r\n    return agent.Profile.editPersonal(data).then(\r\n      x => {\r\n        notifySuccess(\"Profile updated\")\r\n        return dispatch(profileUpdated(x.data.profile))\r\n      },\r\n      err => {\r\n        notifyError(\"Cannot update profile\")\r\n        return dispatch(updatingProfileFailed())\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport function updateBankProfile(data) {\r\n\r\n  return dispatch => {\r\n    dispatch(updatingProfile())\r\n    return agent.Profile.editBank(data).then(\r\n      x => {\r\n        notifySuccess(\"Profile updated\")\r\n        return dispatch(profileUpdated(x.data.profile))\r\n      },\r\n      err => {\r\n        return dispatch(updatingProfileFailed())\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport function fetchBanks() {\r\n  return dispatch => {\r\n    return agent.Wallet.banks().then(\r\n      x => {\r\n        return dispatch(banksLoaded(x.data))\r\n      },\r\n      err => {\r\n        // dispatch(loadingLeadersFailed())\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\nexport function subscribeToPlan(planId) {\r\n  return dispatch => {\r\n    dispatch(purchasingPlan())\r\n    return agent.Plan.subscribe(planId).then(\r\n      x => {\r\n        dispatch(hideModal())\r\n        dispatch(walletLoaded(x.data.wallet))\r\n        return dispatch(planPurchased(x.data.plans))\r\n      },\r\n      err => {\r\n        return dispatch(planPurchaseFailed())\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport function getCurrentUser() {\r\n  return agent.Auth.current();\r\n}\r\n\r\nfunction notifySuccess(message) {\r\n  toast.success(message);\r\n}\r\n\r\nfunction notifyError(message) {\r\n  toast.error(message);\r\n}\r\n\r\nfunction onLogin(dispatch, user) {\r\n  agent.Auth.saveAuthData(user)\r\n  // agent.Auth.saveFirstTime()\r\n  dispatch(userLoggedIn(user))\r\n  dispatch(push('/dashboard'))\r\n}\r\n\r\nfunction readFormData(file, name) {\r\n  const reader = new FileReader();\r\n  file.avatar = file.name;\r\n  reader.readAsDataURL(file);\r\n\r\n  var formData = new FormData();\r\n  formData.append(name, file);\r\n\r\n  return formData;\r\n}\r\n\r\nfunction getErrorMessage(error) {\r\n  let errorMessage = \"\";\r\n  if (error) {\r\n    if (typeof error === 'string') {\r\n      errorMessage = error;\r\n    }\r\n    else if (error.response && error.response.body) {\r\n      errorMessage = typeof error.response.body === 'string' ? error.response.body : error.response.body[0].description;\r\n\r\n    }\r\n  }\r\n  else {\r\n    errorMessage = \"error occured while processing this request, try again later\";\r\n  }\r\n  return errorMessage;\r\n}\r\n","export const APP_LOAD = 'APP_LOAD'\r\nexport const USER_LOGGED_IN = 'USER_LOGGED_IN'\r\n\r\n\r\nexport const REQUEST_FETCHING = 'REQUEST_FETCHING';\r\nexport const REQUEST_FETCHED = 'REQUEST_FETCHED';\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const LOAD_USER = 'LOAD_USER'\r\nexport const USER_LOGGING_IN = 'USER_LOGGING_IN'\r\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED'\r\nexport const USER_REGISTERING = 'USER_REGISTERING'\r\nexport const USER_REGISTERED = 'USER_REGISTERED'\r\nexport const USER_REGISTERING_FAILED = 'USER_REGISTERING_FAILED'\r\nexport const ERROR_MESSAGE_CLEARED = 'ERROR_MESSAGE_CLEARED'\r\nexport const WALLET_LOADED = 'WALLET_LOADED'\r\nexport const WALLET_LOADING = 'WALLET_LOADING'\r\nexport const WALLET_LOAD_FAILED= 'WALLET_LOAD_FAILED'\r\nexport const SHOW_GLOBAL_HEADER= 'SHOW_GLOBAL_HEADER'\r\nexport const HIDE_GLOBAL_HEADER= 'HIDE_GLOBAL_HEADER'\r\nexport const REDIRECT = 'REDIRECT'\r\nexport const SHOW_MODAL = 'SHOW_MODAL'\r\nexport const HIDE_MODAL = 'HIDE_MODAL'\r\nexport const LOGIN = 'LOGIN'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const REGISTER = 'REGISTER'\r\nexport const WALLET_LOAD = 'WALLET_LOAD'\r\nexport const WALLET_TRANSACTIONS_LOAD = 'WALLET_TRANSACTIONS_LOAD'\r\nexport const GAMES_LOAD = 'GAMES_LOAD'\r\nexport const GAME_CATEGORY_SELECTED = 'GAME_CATEGORY_SELECTED'\r\nexport const GAME_STARTED = 'GAME_STARTED'\r\nexport const GAME_UNLOADED = 'GAME_UNLOADED'\r\nexport const CATEGORIES_LOADED = 'CATEGORIES_LOADED'\r\nexport const GAME_QUESTION_FETCHED = 'GAME_QUESTION_FETCHED'\r\nexport const GAME_ENDED = 'GAME_ENDED'\r\nexport const GAME_RESTARTED= 'GAME_RESTARTED'\r\nexport const RELOAD_APP = 'RELOAD_APP'\r\nexport const PAYMENT_MADE = 'PAYMENT_MADE'\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD'\r\nexport const TOGGLE_MENU = 'TOGGLE_MENU'\r\nexport const HIDE_GAME_SUMMARY_HEADER = 'HIDE_GAME_SUMMARY_HEADER'\r\nexport const SHOW_GAME_SUMMARY_HEADER = 'SHOW_GAME_SUMMARY_HEADER'\r\nexport const SHOW_HEADER = 'SHOW_HEADER'\r\nexport const HIDE_HEADER = 'HIDE_HEADER'\r\nexport const RANK_LOADED = 'RANK_LOADED'\r\nexport const IS_MOBILE = 'IS_MOBILE'\r\nexport const MOBILE_WIDTH = 480\r\n\r\nexport const LEADERS_LOADED = 'LEADERS_LOADED'\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING'\r\nexport const LEADERS_LOADING_FAILED = 'LEADERS_LOADING_FAILED'\r\n\r\nexport const BANKS_LOADED = 'BANKS_LOADED'\r\n\r\nexport const LOAD_PROFILE = 'LOAD_PROFILE'\r\nexport const UPDATING_PROFILE = 'UPDATING_PROFILE'\r\nexport const PROFILE_UPDATED = 'PROFILE_UPDATED'\r\nexport const UPDATING_PROFILE_FAILED = 'UPDATING_PROFILE_FAILED'\r\n\r\nexport const UPLOADING_AVATAR = 'UPLOADING_AVATAR'\r\nexport const AVATAR_UPLAODED = 'AVATAR_UPLAODED'\r\nexport const AVATAR_UPLAOD_FAILED = 'AVATAR_UPLAOD_FAILED'\r\n\r\n\r\nexport const PLANS_LOADED = 'PLANS_LOADED'\r\nexport const GAME_PLAN_SELECTED = 'GAME_PLAN_SELECTED'\r\nexport const PLAN_PURCHASED = 'PLAN_PURCHASED'\r\nexport const PURCHASING_PLAN = 'PURCHASING_PLAN'\r\nexport const PURCHASING_PLAN_FAILED = 'PURCHASING_PLAN_FAILED'\r\n\r\n//customer actions\r\nexport const CREATE_CUSTOMER = 'CREATE_CUSTOMER';\r\nexport const EDIT_CUSTOMER = 'EDIT_CUSTOMER';\r\nexport const VIEW_CUSTOMER = 'VIEW_CUSTOMER';\r\n\r\n\r\n//user actions\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const VIEW_USER = 'VIEW_USER';\r\n\r\n//global model\r\nexport const MODEL_CREATION_FAILED = 'MODEL_CREATION_FAILED';\r\n\r\n// export const ","import React from 'react';\r\nconst AppLoading = () => {\r\n  return (\r\n    <div className=\"App-loading\">Loading</div>\r\n  )\r\n}\r\n\r\nexport default AppLoading;","import { \r\n  MODEL_CREATION_FAILED,\r\n  APP_LOAD, USER_LOADED, USER_LOGIN_FAILED, USER_LOGGING_IN, HIDE_MODAL, \r\n  USER_LOGGED_IN, LOGOUT, SHOW_MODAL, USER_REGISTERING_FAILED, USER_REGISTERING, \r\n  USER_REGISTERED, LEADERS_LOADING, LEADERS_LOADING_FAILED, LEADERS_LOADED, ERROR_MESSAGE_CLEARED,\r\n  CATEGORIES_LOADED, WALLET_LOADED, PLANS_LOADED, RANK_LOADED,\r\n  SHOW_GLOBAL_HEADER, HIDE_GLOBAL_HEADER, LOAD_PROFILE,\r\n  UPLOADING_AVATAR,\r\n  AVATAR_UPLAODED,\r\n  AVATAR_UPLAOD_FAILED,\r\n  BANKS_LOADED,\r\n  PROFILE_UPDATED, UPDATING_PROFILE, UPDATING_PROFILE_FAILED, PLAN_PURCHASED, PURCHASING_PLAN, PURCHASING_PLAN_FAILED,\r\n  CREATE_CUSTOMER, EDIT_CUSTOMER, VIEW_CUSTOMER,\r\n  CREATE_USER, EDIT_USER, VIEW_USER,\r\n  REQUEST_FETCHED, REQUEST_FETCHING\r\n } from \"./constants/actionTypes\";\r\n\r\n export function showModal(modalName){\r\n  return {\r\n    type: SHOW_MODAL, \r\n    modalProps: { open: true }, \r\n    modalType: modalName \r\n  }\r\n}\r\n\r\nexport function requestFetched(){\r\n  return  { \r\n    type: REQUEST_FETCHED\r\n  }\r\n}\r\n\r\nexport function requestFetching(){\r\n  return  { \r\n    type: REQUEST_FETCHING\r\n  }\r\n}\r\n\r\nexport function appLoaded(){\r\n  return  { \r\n    type: APP_LOAD\r\n  }\r\n}\r\n\r\nexport function userLoggingIn(){\r\n  return  { \r\n    type: USER_LOGGING_IN, \r\n  }\r\n}\r\n\r\nexport function userLoaded(user){\r\n  return  { \r\n    type: USER_LOADED, \r\n    user, \r\n  }\r\n}\r\n\r\nexport function userLoggedIn(user){\r\n  return  { \r\n    type: USER_LOGGED_IN, \r\n    user, \r\n  }\r\n}\r\n\r\nexport function userLoginFailed(error){\r\n  return  { \r\n    type: USER_LOGIN_FAILED, \r\n    error, \r\n  }\r\n}\r\n\r\nexport function userRegistering(){\r\n  return  { \r\n    type: USER_REGISTERING, \r\n  }\r\n}\r\n\r\nexport function userRegistered(user){\r\n  return  { \r\n    type: USER_REGISTERED,\r\n    user, \r\n  }\r\n}\r\n\r\nexport function leadersLoaded(board){\r\n  return  { \r\n    type: LEADERS_LOADED,\r\n    board: board\r\n  }\r\n}\r\n\r\nexport function loadingLeaders(){\r\n  return  { \r\n    type: LEADERS_LOADING,\r\n  }\r\n}\r\n\r\nexport function loadingLeadersFailed(){\r\n  return  { \r\n    type: LEADERS_LOADING_FAILED,\r\n  }\r\n}\r\n\r\nexport function errorMessageCleared(){\r\n  return  { \r\n    type: ERROR_MESSAGE_CLEARED,\r\n  }\r\n}\r\n\r\nexport function userRegisterFailed(error){\r\n  return  { \r\n    type: USER_REGISTERING_FAILED, \r\n    error\r\n  }\r\n}\r\n\r\n\r\nexport function onModelCreationFailed(error){\r\n  return  { \r\n    type: MODEL_CREATION_FAILED, \r\n    error\r\n  }\r\n}\r\n\r\nexport function categoriesLoaded(data){\r\n  return { \r\n    type: CATEGORIES_LOADED, \r\n    payload: data \r\n  }\r\n}\r\n\r\nexport function plansLoaded(data){\r\n  return { \r\n    type: PLANS_LOADED, \r\n    payload: data \r\n  }\r\n}\r\n\r\nexport function walletLoaded(data){\r\n  return { \r\n    type: WALLET_LOADED, \r\n    ...data \r\n  }\r\n}\r\n\r\nexport function uploadingAvatar(){\r\n  return { \r\n    type: UPLOADING_AVATAR,\r\n  }\r\n}\r\n\r\nexport function avatarUploaded(avatar){\r\n  return { \r\n    type: AVATAR_UPLAODED,\r\n    payload: avatar\r\n  }\r\n}\r\n\r\nexport function avatarUploadFailed(){\r\n  return { \r\n    type: AVATAR_UPLAOD_FAILED,\r\n  }\r\n}\r\n\r\nexport function profileLoaded(data){\r\n  return { \r\n    type: LOAD_PROFILE,\r\n    payload: data\r\n  }\r\n}\r\n\r\n\r\nexport function profileUpdated(data){\r\n  return { \r\n    type: PROFILE_UPDATED,\r\n    payload: data\r\n  }\r\n}\r\nexport function updatingProfile(){\r\n  return { \r\n    type: UPDATING_PROFILE,\r\n  }\r\n}\r\n\r\nexport function updatingProfileFailed(){\r\n  return { \r\n    type: UPDATING_PROFILE_FAILED,\r\n  }\r\n}\r\n\r\nexport function update(data){\r\n  return { \r\n    type: PROFILE_UPDATED,\r\n    payload: data\r\n  }\r\n}\r\n\r\n\r\nexport function rankLoaded(data){\r\n  return { \r\n    type: RANK_LOADED,\r\n    rank: data\r\n  }\r\n}\r\n\r\nexport function searchItem(modalName){\r\n  return {\r\n    type: SHOW_MODAL, \r\n    modalProps: { open: true }, \r\n    modalType: modalName \r\n  }\r\n}\r\n\r\n\r\nexport function hideModal(){\r\n  return {\r\n    type: HIDE_MODAL \r\n  }\r\n}\r\n\r\nexport function userLogout(){\r\n  return {\r\n    type: LOGOUT \r\n  }\r\n}\r\n\r\nexport function showGlobalHeader(){\r\n  return {\r\n    type: SHOW_GLOBAL_HEADER,\r\n  }\r\n}\r\n\r\nexport function hideGlobalHeader(){\r\n  return {\r\n    type: HIDE_GLOBAL_HEADER,\r\n  }\r\n}\r\n\r\nexport function showSignUpBonusModal(){\r\n  return { \r\n    type: SHOW_MODAL, \r\n    modalProps: { open: true }, \r\n    modalType: 'SignUpBonusModal' \r\n  }\r\n}\r\n\r\nexport function banksLoaded(banks){\r\n  return {\r\n    type: BANKS_LOADED,\r\n    banks\r\n  }\r\n}\r\n\r\nexport function purchasingPlan(){\r\n  return{\r\n    type: PURCHASING_PLAN\r\n  }\r\n}\r\n\r\nexport function planPurchased(data){\r\n  return{\r\n    type: PLAN_PURCHASED,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function planPurchaseFailed(){\r\n  return{\r\n    type: PURCHASING_PLAN_FAILED\r\n  }\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nimport agent from '../agent';\r\nimport './App.css';\r\nimport { loadApp, showBonusAlert } from '../actions';\r\nimport AppLoading from './UI/Spinner/AppLoading';\r\n\r\nconst AppRouter = React.lazy(() => import('./../components/AppRouter'));\r\ntoast.configure({\r\n  position: \"top-right\",\r\n  autoClose: 5000,\r\n  hideProgressBar: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n});\r\n\r\nfunction App(props) {\r\n  const showBonus = useSelector(state => state.common.showBonus)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    showBonus && dispatch(showBonusAlert())\r\n  }, [showBonus, dispatch])\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect')\r\n    if (agent.Auth.isAuth()) {\r\n      console.log('load app')\r\n      dispatch(loadApp())\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <React.Suspense fallback={<AppLoading />}>\r\n      <AppRouter />\r\n    </React.Suspense>\r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  Route,\r\n} from \"react-router\";\r\n\r\nimport configureStore, { history } from './store';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import ModalContainer from './components/ModalContainer';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\n\r\nconst store = configureStore(/* provide initial state if any */)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}> { /* place ConnectedRouter under Provider */}\r\n      <Route component={App} />\r\n      {/* <Route component={ModalContainer} /> */}\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\nimport store from './store';\r\nimport { logout } from './actions';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\nconst API_ROOT = 'http://54.160.116.227/savlite/api';\r\nlet token = null;\r\nconst responseBody = res => res.body;\r\n\r\nconst tokenPlugin = req => {\r\n  req.set('Accept', 'application/json');\r\n\r\n  if (token) {\r\n    req.set('Authorization', `Bearer ${token}`);\r\n  }\r\n\r\n  req.on('response', function (res) {\r\n    if (res.status === 401) {\r\n      console.log(store);\r\n      \r\n      store.dispatch(logout())\r\n    }\r\n  });\r\n\r\n}\r\n\r\nconst requests = {\r\n  del: url =>\r\n    superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  put: (url, body) =>\r\n    superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody)\r\n};\r\n\r\nconst Auth = {\r\n  logError: (data) =>\r\n    requests.post('/v1/log/error', { data }),\r\n  isAuth: () => {\r\n    const auth = JSON.parse(window.localStorage.getItem('auth'));\r\n    const token = auth ? auth.auth_token : null;\r\n    return !!token;\r\n  },\r\n  setToken: () => {\r\n    const auth = JSON.parse(window.localStorage.getItem('auth'));\r\n    token = auth.auth_token;\r\n  },\r\n  saveAuthData: (_user) => {\r\n    window.localStorage.setItem('auth', JSON.stringify(_user));\r\n    token = _user.auth_token;\r\n  },\r\n  saveFirstTime: () => {\r\n    window.localStorage.setItem('ftime', true);\r\n  },\r\n  loggedInOnce: () => {\r\n    return !!window.localStorage.getItem('ftime');\r\n  },\r\n  logout: () => {\r\n    window.localStorage.removeItem('auth')\r\n    token = null\r\n  },\r\n  current: () => JSON.parse(window.localStorage.getItem('auth')),\r\n  login: (username, password) =>\r\n    requests.post('/auth/login', { username, password }),\r\n  register: data =>\r\n    requests.post('/auth/register', data),\r\n  checkValidEmail: email =>\r\n    requests.post(`/auth/email/is-valid`, { email }),\r\n  forgotPassword: email =>\r\n    requests.post(`/auth/forgotPassword`, { email }),\r\n  resetPassword: (email, password) =>\r\n    requests.post(`/auth/password/reset`, { email, password }),\r\n  sendResetToken: (email) =>\r\n    requests.post(`/auth/password/email`, { email }),\r\n  verifyResetToken: (email, token) =>\r\n    requests.post(`/auth/password/verify-token`, { email, token })\r\n}\r\n\r\nconst Customer = {\r\n  save: (customer) =>\r\n    requests.post('/customer', customer),\r\n  load: () =>\r\n    requests.get('/customer'),\r\n  loadByCard: (card) =>\r\n    requests.get(`/customer/cards/${card}`),\r\n  edit: (customer) =>\r\n    requests.put('/customer', customer),\r\n  delete: (id) =>\r\n    requests.del(`/customer/${id}`),\r\n  view: (id) =>\r\n    requests.get(`/customer/${id}`),\r\n  card: () =>\r\n    requests.get('/customer/cards')\r\n};\r\n\r\nconst Charge = {\r\n  save: (charge) =>\r\n    requests.post('/charge', charge),\r\n  load: () =>\r\n    requests.get('/charge'),\r\n  edit: (charge) =>\r\n    requests.put('/charge', charge),\r\n  delete: (id) =>\r\n    requests.del(`/charge/${id}`),\r\n  view: (id) =>\r\n    requests.get(`/charge/${id}`)\r\n};\r\n\r\n\r\n\r\nconst User = {\r\n  save: (user) =>\r\n    requests.post('/user', user),\r\n  load: () =>\r\n    requests.get('/user'),\r\n  edit: (user) =>\r\n    requests.put('/user', user),\r\n  delete: (id) =>\r\n    requests.del(`/user/${id}`),\r\n  view: (id) =>\r\n    requests.get(`/user/${id}`)\r\n};\r\n\r\nconst Transaction = {\r\n  save: (transaction) =>\r\n    requests.post('/transaction', transaction),\r\n  load: () =>\r\n    requests.get('/transaction'),\r\n  edit: (transaction) =>\r\n    requests.put('/transaction', transaction),\r\n  approve: (transaction) =>\r\n    requests.put('/transaction/approve', transaction),\r\n  delete: (id) =>\r\n    requests.del(`/transaction/${id}`),\r\n  view: (id) =>\r\n    requests.get(`/transaction/${id}`)\r\n};\r\n\r\nconst Profile = {\r\n  save: profile =>\r\n    requests.put('/v1/profile', { profile }),\r\n  load: () =>\r\n    requests.get('/v1/profile/me'),\r\n  edit: (profile) =>\r\n    requests.post('/v1/profile/me/edit', profile),\r\n  editBank: (profile) =>\r\n    requests.post('/v1/profile/me/edit-bank', profile),\r\n  editPersonal: (profile) =>\r\n    requests.post('/v1/profile/me/edit-personal', profile),\r\n  uploadAvatar: (avatar) =>\r\n    requests.post('/v1/profile/me/picture', avatar)\r\n}\r\n\r\n\r\nexport default {\r\n  Auth,\r\n  Profile,\r\n  User,\r\n  Customer,\r\n  Transaction,\r\n  Charge,\r\n  setToken: _token => { token = _token; },\r\n};\r\n"],"sourceRoot":""}