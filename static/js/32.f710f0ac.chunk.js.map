{"version":3,"sources":["components/AnonymousRoute.js","components/ProtectedRoute.js","components/AppRouter.js"],"names":["AnonymousRoute","children","rest","console","log","agent","Auth","isAuth","to","pathname","AppNavBar","React","lazy","ProtectedRoute","ListCustomers","CreateCustomer","EditCustomer","ViewCustomer","DeleteCustomer","ListCharges","CreateCharge","EditCharge","ViewCharge","DeleteCharge","ListCards","ListUsers","CreateUser","EditUser","ViewUser","DeleteUser","ListTransactions","PostCreditTransaction","PostDebitTransaction","EditTransaction","ViewTransaction","DeleteTransaction","ApproveTransaction","Dashboard","Login","Register","AppRouter","dispatch","useDispatch","location","useLocation","useEffect","clearErrorMessage","Suspense","fallback","AppLoading","path","exact","component"],"mappings":"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","file":"static/js/32.f710f0ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router';\r\nimport agent from '../agent';\r\n\r\nconst AnonymousRoute = ({ children, ...rest }) => {\r\n  console.log(\"in anonymous \" + agent.Auth.isAuth())\r\n  if (!agent.Auth.isAuth()) {\r\n    console.log(\"not authenticated\")\r\n    return <Route {...rest} >{children}</Route>\r\n  }\r\n  else {\r\n    console.log(\"redirect to home\")\r\n    return <Redirect to={{ pathname: \"/dashboard\" }} />\r\n  }\r\n}\r\n\r\nexport default AnonymousRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router';\r\nimport '@pwabuilder/pwainstall'\r\n\r\nimport agent from '../agent';\r\n\r\nconst AppNavBar = React.lazy(() => import('./../components/AppNavBar'));\r\n\r\nconst ProtectedRoute = ({ children, ...rest }) => {\r\n  if (agent.Auth.isAuth()) {\r\n    return (\r\n      <>\r\n       <AppNavBar />\r\n        <Route {...rest} >\r\n          {children}\r\n        </Route>\r\n      </>\r\n    )\r\n  } else {\r\n    return <Redirect to={{ pathname: \"/login\" }} />\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { useEffect,  } from 'react'\r\nimport { Switch, Redirect, useLocation } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { BrowserView } from \"react-device-detect\"\r\nimport { clearErrorMessage } from \"../actions\";\r\nimport AppLoading from './UI/Spinner/AppLoading'\r\nimport AnonymousRoute from './AnonymousRoute'\r\nimport ProtectedRoute from './ProtectedRoute'\r\n\r\nconst ListCustomers = React.lazy(() => import('./customers/List'))\r\nconst CreateCustomer = React.lazy(() => import('./customers/Create'))\r\nconst EditCustomer = React.lazy(() => import('./customers/Update'))\r\nconst ViewCustomer = React.lazy(() => import('./customers/View'))\r\nconst DeleteCustomer = React.lazy(() => import('./customers/Delete'))\r\n\r\nconst ListCharges = React.lazy(() => import('./charges/List'));\r\nconst CreateCharge = React.lazy(() => import('./charges/Create'));\r\nconst EditCharge = React.lazy(() => import('./charges/Update'));\r\nconst ViewCharge = React.lazy(() => import('./charges/View'));\r\nconst DeleteCharge = React.lazy(() => import('./charges/Delete'));\r\nconst ListCards = React.lazy(() => import('./cards/List'));\r\n\r\nconst ListUsers = React.lazy(() => import('./users/List'));\r\nconst CreateUser = React.lazy(() => import('./users/Create'));\r\nconst EditUser = React.lazy(() => import('./users/Update'));\r\nconst ViewUser = React.lazy(() => import('./users/View'));\r\nconst DeleteUser = React.lazy(() => import('./users/Delete'));\r\n\r\nconst ListTransactions = React.lazy(() => import('./transactions/List'));\r\nconst PostCreditTransaction = React.lazy(() => import('./transactions/PostCredit'));\r\nconst PostDebitTransaction = React.lazy(() => import('./transactions/PostDebit'));\r\nconst EditTransaction = React.lazy(() => import('./transactions/Update'));\r\nconst ViewTransaction = React.lazy(() => import('./transactions/View'));\r\nconst DeleteTransaction = React.lazy(() => import('./transactions/Delete'));\r\nconst ApproveTransaction = React.lazy(() => import('./transactions/Approve'));\r\n\r\nconst Dashboard = React.lazy(() => import('./Dashboard/Dashboard'))\r\nconst Login = React.lazy(() => import('./../components/auth/Login'))\r\nconst Register = React.lazy(() => import('./../components/auth/Register'))\r\n\r\nconst AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  let location = useLocation()\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrorMessage());\r\n  }, [location, dispatch])\r\n  return (\r\n    <React.Suspense fallback={<AppLoading />}>\r\n      <BrowserView>\r\n        <Switch>\r\n          <AnonymousRoute path=\"/login\" exact component={Login} />\r\n          <AnonymousRoute path=\"/register\" exact component={Register} />\r\n          <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\r\n\r\n          <ProtectedRoute path=\"/customers\" exact component={ListCustomers} />\r\n          <ProtectedRoute path=\"/customers/new\" component={CreateCustomer} />\r\n          <ProtectedRoute path=\"/customers/edit/:id\" component={EditCustomer} />\r\n          <ProtectedRoute path=\"/customers/view/:id\" component={ViewCustomer} />\r\n          <ProtectedRoute path=\"/customers/delete/:id\" component={DeleteCustomer} />\r\n\r\n          <ProtectedRoute path=\"/charges\" exact component={ListCharges} />\r\n          <ProtectedRoute path=\"/charges/new\" component={CreateCharge} />\r\n          <ProtectedRoute path=\"/charges/edit/:id\" component={EditCharge} />\r\n          <ProtectedRoute path=\"/charges/view/:id\" component={ViewCharge} />\r\n          <ProtectedRoute path=\"/charges/delete/:id\" component={DeleteCharge} />\r\n          <ProtectedRoute path=\"/cards\" exact component={ListCards} />\r\n\r\n          <ProtectedRoute path=\"/users\" exact component={ListUsers} />\r\n          <ProtectedRoute path=\"/users/new\" component={CreateUser} />\r\n          <ProtectedRoute path=\"/users/edit/:id\" component={EditUser} />\r\n          <ProtectedRoute path=\"/users/view/:id\" component={ViewUser} />\r\n          <ProtectedRoute path=\"/users/delete/:id\" component={DeleteUser} />\r\n\r\n          <ProtectedRoute path=\"/transactions\" exact component={ListTransactions} />\r\n          <ProtectedRoute path=\"/transactions/credit\" component={PostCreditTransaction} />\r\n          <ProtectedRoute path=\"/transactions/debit\" component={PostDebitTransaction} />\r\n          <ProtectedRoute path=\"/transactions/edit/:id\" component={EditTransaction} />\r\n          <ProtectedRoute path=\"/transactions/view/:id\" component={ViewTransaction} />\r\n          <ProtectedRoute path=\"/transactions/delete/:id\" component={DeleteTransaction} />\r\n          <ProtectedRoute path=\"/transactions/approve/:id\" component={ApproveTransaction} />\r\n          <Redirect to=\"/dashboard\" />\r\n        </Switch>\r\n      </BrowserView>\r\n    </React.Suspense>\r\n  )\r\n}\r\n\r\nexport default AppRouter;"],"sourceRoot":""}